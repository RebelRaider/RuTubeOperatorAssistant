import clip
import torch
from PIL import Image


def image2embeddings(
    image_bytes: bytes, processor, model, device: str = "cpu"
) -> torch.Tensor:
    """
    Преобразует байтовое изображение в тензор эмбеддингов с помощью заданной модели.

    Функция принимает изображение в виде байтов, обрабатывает его с помощью указанного процессора и модели,
    и возвращает тензор эмбеддингов изображения.

    Параметры
    ----------
    image_bytes : bytes
        Изображение в формате байтов.
    processor
        Объект или функция для предварительной обработки изображения.
    model
        Модель с методом `encode_image`, используемая для получения эмбеддингов.
    device : str, по умолчанию "cpu"
        Устройство для выполнения вычислений ("cpu" или "cuda").

    Возвращает
    -------
    torch.Tensor
        Тензор эмбеддингов изображения.

    Примечания
    ---------
    - Предполагается, что `processor` принимает объект PIL.Image и возвращает тензор.
    - Модель должна иметь метод `encode_image`, который принимает тензор изображения и возвращает эмбеддинги.
    - Используется контекст `torch.no_grad()` для отключения вычисления градиентов, что ускоряет вычисление и снижает использование памяти.
    """
    # TODO fix it, error: ValueError: lstat: embedded null character in path
    image = Image.open(image_bytes)
    image = processor(image).unsqueeze(0).to(device)
    with torch.no_grad():
        image_features = model.encode_image(image)
    return image_features


def load_image_embeddings(model: str, device: str = "cpu") -> tuple:
    """
    Загружает модель и процессор для извлечения эмбеддингов изображений.

    Функция загружает указанную модель и процессор с помощью библиотеки `clip`, которые используются для обработки изображений и получения их эмбеддингов.

    Параметры
    ----------
    model : str
        Имя модели, которую необходимо загрузить.
    device : str, по умолчанию "cpu"
        Устройство для выполнения вычислений ("cpu" или "cuda").

    Возвращает
    -------
    tuple
        Кортеж, содержащий загруженную модель и процессор.

    Примечания
    ---------
    - Используется функция `clip.load` для загрузки модели и процессора.
    - Убедитесь, что выбранная модель поддерживается библиотекой `clip`.
    - Процессор необходим для предварительной обработки изображений перед передачей их в модель.
    """
    model, processor = clip.load(name=model, device=device)

    return model, processor
